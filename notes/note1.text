## episode 1 ##


React Element (Object) = HTML (Browser Understands)
i.e React.createElement => Object => HTML Element (replaces the html element by .render())
React Element returns an object that is then replaced by .render function into an HTML element and if there's anything already present in the div with root id it'll be 
replaced by the react Element

<div id="parent">
    <div id="child1">
        <h1>I'm h1 tag</h1>
        <h2>I'm h2 tag</h2>
    </div>
    <div id="child2">
        <h1>I'm h1 tag</h1>
        <h2>I'm h2 tag</h2>
    </div>
</div>

const parent = React.createElement("div", { id: "parent" }, [
  React.createElement("div", { id: "child1" }, [
    React.createElement("h1", {}, "I'm a h1 tag"),
    React.createElement("h2", {}, "I'm a h2 tag"),
  ]),
  React.createElement("div", { id: "child2" }, [
    React.createElement("h1", {}, "I'm a h1 tag"),
    React.createElement("h2", {}, "I'm a h2 tag"),
  ]),
]);

const root = ReactDOM.createRoot(document.getElementById("root"))
root.render()

React.createElement("name of tag", attributes, children)// if multiple children pass in [] also,
returns a JS object and not a tag which is then replaced by root.render() into html tags

React is a library and can be just used in a small portion of any JS application
